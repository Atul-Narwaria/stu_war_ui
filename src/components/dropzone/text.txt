import React, { useCallback, useMemo, useState } from 'react'
import {useDropzone} from 'react-dropzone'
import Swal from 'sweetalert2';
export default function BatchAssignments() {
    const [progress, setProgress] = useState(0);
    const [isUploadCancelled, setIsUploadCancelled] = useState(false);
    const onDrop = useCallback((acceptedFiles:any) => {
        acceptedFiles.forEach(async(file:any) => {
            const chunkSize = 512 * 512; // 500kb chunks
            const totalChunks: any = Math.ceil(file.size / chunkSize);
            let currentChunk: any = 0;
            const controller = new AbortController();
            const signal = controller.signal;
            while (currentChunk < totalChunks) {
                const start = currentChunk * chunkSize;
                const end = Math.min(start + chunkSize, file.size);
                const chunk = file.slice(start, end);
                const formData = new FormData();
                formData.append("chunk", chunk);
                formData.append("filename", file.name);
                formData.append("currentChunk", currentChunk);
                formData.append("totalChunks", totalChunks);
          
                // Send the chunk to the server using fetch or Axios
               try{
                await fetch("http://thelearningcampus.in/combine.php", {
                  method: "POST",
                  body: formData,
                });
               }catch(e:any){
                Swal.fire({
                          icon: 'error',
                          title: 'Internal Server Error',
                          text: 'Something went wrong, please try again later ',
                      })
               }
          
                currentChunk++;
              }
              try{
                const upload =    await fetch("http://thelearningcampus.in/combine.php", {
                  method: "POST",
                  body: JSON.stringify({ action: "complete", filename: file.name }),
                });
        
                if(upload.status === 200){
                  console.log(`http://thelearningcampus.in/uploads/${file.name}`);
                }
              }catch(e:any){
                Swal.fire({
                  icon: 'error',
                  title: 'Internal Server Error',
                  text: 'Something went wrong, please try again later ',
              })
              }
        })
        
      }, [])
      const {getRootProps, getInputProps} = useDropzone({onDrop})
      
  return (
    <>
    <div className='p-2 h-[15vh] rounded-xl w-full grid place-content-center  border border-gray-500 border-dashed bg-gray-200'  {...getRootProps()}>
      <input {...getInputProps()} />
      <p>Drag 'n' drop some files here, or click to select files</p>
    </div>
    </>
  )

  
  
  
}
